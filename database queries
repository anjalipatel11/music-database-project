--Queries
--1
SELECT
hiphop_2021.album_name,
sum(hiphop_2021.number_of_times_played) AS popular_hiphop_albums
FROM hiphop_2021 JOIN albums
ON hiphop_2021.album_id = albums.album_id
WHERE hiphop_2021.album_id > 0
GROUP BY hiphop_2021.album_name
ORDER BY popular_hiphop_albums DESC;

--2
SELECT pop_2021.genre_id, song_name, artist_name, single_or_album,
MAX(number_of_times_played) AS streams
FROM pop_2021
JOIN genres
ON pop_2021.genre_id = genres.genre_id
WHERE single_or_album LIKE 'Single'
GROUP BY pop_2021.genre_id, song_name, artist_name, single_or_album,
number_of_times_played
ORDER BY number_of_times_played DESC
LIMIT 1;

--3
-- Query the Hiphop Table
SELECT
'HipHop' AS Genre,
song_name AS Song,
artist_name AS Artist,
CURRENT_DATE - date_of_release AS days_since_release,
number_of_times_played,
CAST(number_of_times_played / (CURRENT_DATE - date_of_release) AS
DECIMAL) AS average_plays_per_day
FROM hiphop_2021
UNION ALL
-- Query the Pop Table
SELECT
'Pop' AS Genre,
song_name AS Song,
artist_name AS Artist,
CURRENT_DATE - date_of_release AS days_since_release,
number_of_times_played,
CAST(number_of_times_played / (CURRENT_DATE - date_of_release) AS
DECIMAL) AS average_plays_per_day
FROM pop_2021
UNION ALL
-- Query the KPop Table
SELECT
'KPop' AS Genre,
song_name AS Song,
artist_name AS Artist,
CURRENT_DATE - date_of_release AS days_since_release,
number_of_times_played,
CAST(number_of_times_played / (CURRENT_DATE - date_of_release) AS
DECIMAL) AS average_plays_per_day
FROM kpop_2021
UNION ALL
-- Query the Rock Table
SELECT
'Rock' AS Genre,
song_name AS Song,
artist_name AS Artist,
CURRENT_DATE - date_of_release AS days_since_release,
number_of_times_played,
CAST(number_of_times_played / (CURRENT_DATE - date_of_release) AS
DECIMAL) AS average_plays_per_day
FROM rock_alternative_2021
ORDER BY Genre, average_plays_per_day DESC;

--4
SELECT
SPLIT_PART(artist_name, ',', 1) AS artist_name,
count(*) AS number_of_chart_entries
FROM (SELECT * FROM hiphop_2021
UNION ALL
SELECT * FROM pop_2021
UNION ALL
SELECT * FROM kpop_2021
UNION ALL
SELECT * FROM rock_alternative_2021) AS genres
GROUP BY split_part(artist_name, ',', 1)
ORDER BY number_of_chart_entries DESC;

--5
SELECT DISTINCT
albums.album_artist AS "Artist",
albums.album_name AS "Album Name",
rock_alternative_2021.date_of_release AS "Release Date"
FROM albums LEFT JOIN rock_alternative_2021
ON albums.album_name = rock_alternative_2021.album_name
WHERE rock_alternative_2021.single_or_album like ('Album')
ORDER BY date_of_release DESC;

--6
SELECT count(artist_name)
FROM kpop_2021
JOIN genres ON kpop_2021.genre_id = genres.genre_id
WHERE kpop_2021.artist_name LIKE genres.popular_artist;
